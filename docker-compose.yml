version: "3"
networks:
  stream-network:
    driver: bridge

services:
  zookeeper:
    image: "bitnami/zookeeper:3.7"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - stream-network

  kafka:
    image: "bitnami/kafka:2"
    ports:
      - "9093:9093"
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - stream-network

  memgraph-gqlalchemy:
    image: memgraph-gqlalchemy
    volumes:
      - ./query_modules:/usr/lib/memgraph/query_modules
    build: ./memgraph
    entrypoint:
      [
        "/usr/lib/memgraph/memgraph",
        "--telemetry-enabled=false",
        "--also-log-to-stderr=true",
        "--log-level=TRACE",
      ]
    ports:
      - "7687:7687"
    networks:
      - stream-network
  backend:
    build:
      context: ./backend
    image: backend
    command:  uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - 8000:8000
